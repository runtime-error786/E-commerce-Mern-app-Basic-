{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\musta\\\\OneDrive\\\\Desktop\\\\DB Project\\\\front\\\\src\\\\Sta.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Car({\n  name,\n  category,\n  qty,\n  pic\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5 ms-5 mb-5 me-5 card\",\n    style: {\n      width: \"18rem\",\n      display: \"inline-block\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: pic,\n      className: \"card-img-top\",\n      alt: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: [\"Name : \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\" Category: \", category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\" Quantity: \", qty]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = Car;\nfunction Sta() {\n  _s();\n  const validCategories = [\"stationary\", \"grocery\", \"electronics\", \"fastfood\"];\n  let data1 = \"false\";\n  const [data, setData] = useState([]);\n  let {\n    name\n  } = useParams();\n  let nav = useNavigate();\n  console.log(\"param:\", name);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get(\"http://localhost:2001/home\");\n        console.log(response.data);\n        setData(response.data);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n  if (validCategories.includes(name.toLowerCase())) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map((item, index) => item.category == name ? /*#__PURE__*/_jsxDEV(Car, {\n        name: item.name,\n        category: item.category,\n        qty: item.qty,\n        pic: item.pic,\n        data1: \"true\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this) : null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this);\n  } else {\n    return nav(\"\");\n  }\n}\n_s(Sta, \"dZkhRb+lKAq9YK6oftdEQ46P8vY=\", true, function () {\n  return [useParams];\n});\n_c2 = Sta;\nexport { Sta };\nvar _c, _c2;\n$RefreshReg$(_c, \"Car\");\n$RefreshReg$(_c2, \"Sta\");","map":{"version":3,"names":["axios","React","useEffect","useState","useParams","Navigate","jsxDEV","_jsxDEV","Car","name","category","qty","pic","className","style","width","display","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","Sta","_s","validCategories","data1","data","setData","nav","useNavigate","console","log","fetchData","response","get","err","includes","toLowerCase","map","item","index","_c2","$RefreshReg$"],"sources":["C:/Users/musta/OneDrive/Desktop/DB Project/front/src/Sta.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState, } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Navigate } from \"react-router-dom\";\r\nfunction Car({ name, category, qty, pic }) {\r\n  return (\r\n    <div className=\"mt-5 ms-5 mb-5 me-5 card\" style={{width: \"18rem\",display:\"inline-block\" }}>\r\n      <img src={pic} className=\"card-img-top\" alt={name} />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Name : {name}</h5>\r\n        <p className=\"card-text\"> Category: {category}</p>\r\n        <p className=\"card-text\"> Quantity: {qty}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Sta() {\r\n  const validCategories = [\"stationary\", \"grocery\", \"electronics\", \"fastfood\"];\r\n  let data1 = \"false\";\r\n  const [data, setData] = useState([]);\r\n  let {name} = useParams();\r\n  let nav = useNavigate();\r\n  console.log(\"param:\",name);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:2001/home\");\r\n        console.log(response.data);\r\n        setData(response.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\nif(validCategories.includes(name.toLowerCase()))\r\n{\r\n\r\n  return (\r\n    <div>\r\n      {data.map((item, index) => (\r\n  item.category == name ? (\r\n    <Car\r\n      key={index}\r\n      name={item.name}\r\n      category={item.category}\r\n      qty={item.qty}\r\n      pic={item.pic}\r\n      data1={\"true\"}\r\n    />\r\n  ) : null\r\n))}\r\n\r\n    </div>\r\n  );\r\n}\r\nelse{\r\n  return nav(\"\");\r\n}\r\n}\r\n\r\nexport { Sta };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}